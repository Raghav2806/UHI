<!DOCTYPE html>
<html>
<head>
    <title>PDF Upload and Retrieval</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        h1, h2 {
            color: #333;
        }
        form {
            margin-bottom: 20px;
        }
        #message {
            margin-top: 10px;
            padding: 10px;
            border-radius: 5px;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
        }
        #pdfList {
            list-style-type: none;
            padding: 0;
        }
        #pdfList li {
            margin-bottom: 10px;
        }
        #pdfList a {
            text-decoration: none;
            color: #007bff;
        }
        #pdfList a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <h1>Lab PDF Upload and Retrieval</h1>
    <form id="uploadForm" enctype="multipart/form-data">
        <input type="file" name="pdf" accept="application/pdf" required>
        <button type="submit">Upload</button>
    </form>
    <div id="message"></div>

    <h2>Stored PDFs</h2>
    <ul id="pdfList"></ul>

    <script>
        document.getElementById('uploadForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            fetch('/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                const messageDiv = document.getElementById('message');
                messageDiv.textContent = data.message || data.error;
                messageDiv.className = data.message ? 'success' : 'error';
                if (data.message) {
                    form.reset();
                    fetchPDFList();
                }
            })
            .catch(error => {
                document.getElementById('message').textContent = 'Error uploading file: ' + error.message;
                document.getElementById('message').className = 'error';
            });
        });

        function fetchPDFList() {
            fetch('/pdfs')
                .then(response => response.json())
                .then(pdfs => {
                    const list = document.getElementById('pdfList');
                    list.innerHTML = '';
                    pdfs.forEach(pdf => {
                        const li = document.createElement('li');
                        const link = document.createElement('a');
                        link.href = `/pdf/${pdf.id}`;
                        link.textContent = pdf.filename;
                        link.target = '_blank'; // Open in new tab
                        li.appendChild(link);
                        list.appendChild(li);
                    });
                })
                .catch(error => console.error('Error fetching PDF list:', error));
        }

        // Initial fetch of PDF list
        fetchPDFList();
    </script>
</body>
</html>